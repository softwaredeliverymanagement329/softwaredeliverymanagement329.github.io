(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function o(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(t){if(t.ep)return;t.ep=!0;const r=o(t);fetch(t.href,r)}})();class l{constructor(){this.useNetwork=!1,this.lambdas={getStores:"https://l4jzevaddlpr53lxtup5sy3ve40geiyy.lambda-url.us-east-1.on.aws/"},this.localStores={store:[]}}getStores(e){this.useNetwork?this.fetchRequest(e,"GET","/api/store"):this.lambdas.getStores?this.fetchRequest(e,"GET",this.lambdas.getStores):e(this.readLocalStores())}createStore(e,o){if(this.useNetwork)this.fetchRequest(o,"POST",`/api/store/${e}`);else{const s={name:e,date:new Date().toLocaleString()};o(this.writeLocalStore(s))}}readLocalStores(){const e=localStorage.getItem("store")||'{"store": [{ "name": "Default Pizza Client localstorage", "date": "3/6/2024, 2:47:21 PM" }]}';return JSON.parse(e)}writeLocalStore(e){const o={store:[...this.readLocalStores().store,e]};return localStorage.setItem("store",JSON.stringify(o)),o}async fetchRequest(e,o,s,t={},r=null){r&&(t={...t,"Content-Type":"application/json"});const n={method:o,headers:t,body:r?JSON.stringify(r):null},i=await fetch(s,n);if(!i.ok)throw new Error(`Service request failed: ${i.status}`);if(e){const d=await i.json();e(d)}}}const c=new l;class u extends HTMLElement{constructor(){self=super(),this.createAddInput(),this.createAddStoreButton(),this.createStoreTable(),c.getStores(e=>this.drawTable(e))}createAddInput(){this.addStoreInput=self.appendChild(document.createElement("input")),this.addStoreInput.setAttribute("type","text"),this.addStoreInput.setAttribute("placeholder","store name")}createAddStoreButton(){const e=self.appendChild(document.createElement("button"));e.textContent="Add",e.addEventListener("click",o=>{const s=this.addStoreInput.value;s!==""&&(this.addStoreInput.value="",c.createStore(s,t=>this.drawTable(t)))})}createStoreTable(){const e=self.appendChild(document.createElement("table")),o=e.appendChild(document.createElement("tr")),s=o.appendChild(document.createElement("th"));s.innerText="Name";const t=o.appendChild(document.createElement("th"));t.innerText="Date",this.tableBody=e.appendChild(document.createElement("tbody"))}drawTable(e){e!=null&&e.store.length?(this.tableBody.innerHTML="",e.store.forEach(o=>{const s=document.createElement("tr"),t=document.createElement("td");t.innerText=o.name;const r=document.createElement("td");r.innerText=o.date,s.appendChild(t),s.appendChild(r),this.tableBody.appendChild(s)})):this.tableBody.innerHTML='<tr><td colspan="2">No stores defined</td></tr>'}}customElements.define("action-store",u);const h="/github.svg";document.querySelector("#app").innerHTML=`
  <div>
    <a href="https://github.com/softwaredeliverymanagement329/actions-demo" target="_blank">
      <img src="${h}" class="logo" alt="GitHub logo" />
    </a>
    <h1>DevOps Demo</h1>
    <action-store></action-store>
    <p>
      <a href="https://docs.github.com/en/actions/quickstart" target="_blank">
        GitHub Actions Quickstart
      </a>
    </p>
  </div>
`;
//# sourceMappingURL=index-BIa-ZUZ3.js.map
